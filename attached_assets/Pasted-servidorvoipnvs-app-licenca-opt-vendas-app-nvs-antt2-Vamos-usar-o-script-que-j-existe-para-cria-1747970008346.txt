servidorvoipnvs@app-licenca:/opt/vendas-app/nvs-antt2$ # Vamos usar o script que já existe para criar o admin com hash correto
npx tsx create-admin.ts

# Se não funcionar, vamos fazer diretamente no banco com o hash correto
# O hash para "admin123" usando scrypt é:
psql -h localhost -U nvsantt -d vendas_db -c "
UPDATE users 
SET password = '647b2acdb2f233e6037ac74938d2b43fb79d8a02db9b55b851b0b7f46ad19b988988e67d78a90c64fb8b6fcdac95fdc0.a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6' 
WHERE username = 'admin';
"

# Verificar se foi atualizado
psql -h localhost -U nvsantt -d vendas_db -c "SELECT username, password FROM users WHERE username = 'admin';"

Usuário administrador já existe: {
  id: 1,
  username: 'admin',
  password: 'd973c5fb870ea5dc61d558a8f0bdde6851624b3d22090f744431db5838d5e436274f6e2805d0c1cf8f25a8f07d66acbc2c1ee56e3cd69f1123dbabc65c3f9413.3e82dd7710e8de91632c37d4abebd5c7',
  role: 'admin'
}
Password for user nvsantt: 
UPDATE 1
Password for user nvsantt: 
servidorvoipnvs@app-licenca:/opt/vendas-app/nvs-antt2$ # Vamos verificar se existe algum usuário no banco
psql -h localhost -U nvsantt -d vendas_db -c "SELECT * FROM users LIMIT 5;"

# Criar o usuário admin com senha hasheada corretamente usando o método da aplicação
cd /opt/vendas-app/nvs-antt2
DATABASE_URL="postgresql://nvsantt:nvs123@localhost:5432/vendas_db" node -e "
const { scrypt, randomBytes } = require('crypto');
const { promisify } = require('util');
const { Pool } = require('pg');

const scryptAsync = promisify(scrypt);

async function hashPassword(password) {
  const salt = randomBytes(16).toString('hex');
  const buf = await scryptAsync(password, salt, 64);
  return \`\${buf.toString('hex')}.\${salt}\`;
}

async function createAdmin() {
  const pool = new Pool({ connectionString: process.env.DATABASE_URL });
  const hashedPassword = await hashPassword('admin123');
  
  await pool.query(\`
    INSERT INTO users (username, password, email, role) 
    VALUES ('admin', \$1, 'admin@sistema.com', 'admin') 
    ON CONFLICT (username) 
    DO UPDATE SET password = \$1
  \`, [hashedPassword]);
  
  console.log('✅ Usuário admin criado/atualizado com sucesso!');
  await pool.end();
}

createAdmin().catch(console.error);
"
Password for user nvsantt: 
 id |  username   |  password   |    role     
----+-------------+-------------+-------------
  2 | vendedor    | 123456      | vendedor
  4 | operacional | 123456      | operacional
  3 | financeiro  | 123456      | financeiro
  9 | gustavo     | gustavo123  | vendedor
 11 | mathiely    | mathiely123 | vendedor
(5 rows)

error: column "email" of relation "users" does not exist
    at /opt/vendas-app/nvs-antt2/node_modules/pg-pool/index.js:45:11
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async createAdmin ([eval]:18:3) {
  length: 123,
  severity: 'ERROR',
  code: '42703',
  detail: undefined,
  hint: undefined,
  position: '45',
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: 'parse_target.c',
  line: '1075',
  routine: 'checkInsertTargets'
}
servidorvoipnvs@app-licenca:/opt/vendas-app/nvs-antt2$ 