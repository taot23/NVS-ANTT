                                size={10}
                                placeholder="DD/MM/AAAA"
                                defaultValue={format(date, "dd/MM/yyyy")}
                                onChange={(e) => {
                                  try {
                                    // CORRE√á√ÉO DE SEGURAN√áA: Verificar entrada vazia ou muito curta
                                    if (!e.target.value || e.target.value.length < 2) {
                                      console.log(`üõë Entrada muito curta, ignorando: "${e.target.value}"`);
                                      return; // Ignorar entradas muito curtas para evitar travamentos
                                    }
                                    
                                    console.log(`üîÑ Processando entrada de data: "${e.target.value}"`);
                                    // Tentar converter a string para data
                                    const parts = e.target.value.split('/');
                                    if (parts.length === 3) {
                                      // CORRE√á√ÉO DE SEGURAN√áA: Verificar se as partes t√™m conte√∫do
                                      if (!parts[0] || !parts[1] || !parts[2]) {
                                        console.log(`‚ö†Ô∏è Partes da data incompletas: ${parts.join('/')}`);
                                        return;
                                      }
                                      
                                      const day = parseInt(parts[0]);
                                      const month = parseInt(parts[1]) - 1; // M√™s em JS √© 0-indexed
                                      const year = parseInt(parts[2].length === 2 ? `20${parts[2]}` : parts[2]); // Permite anos com 2 ou 4 d√≠gitos
                                      
                                      // CORRE√á√ÉO DE SEGURAN√áA: Valida√ß√µes b√°sicas antes de criar o objeto Date
                                      if (isNaN(day) || day < 1 || day > 31) {
                                        console.log(`‚ö†Ô∏è Dia inv√°lido: ${parts[0]}`);
                                        return;
                                      }
                                      
                                      if (isNaN(month) || month < -1 || month > 11) {
                                        console.log(`‚ö†Ô∏è M√™s inv√°lido: ${parts[1]}`);
                                        return;
                                      }
                                      
                                      if (isNaN(year) || year < 2000 || year > 2100) {
                                        console.log(`‚ö†Ô∏è Ano inv√°lido: ${parts[2]}`);
                                        return;
                                      }
                                      
                                      if (!isNaN(day) && !isNaN(month) && !isNaN(year)) {
                                        const newDate = new Date(year, month, day);
                                        
                                        if (isValid(newDate)) {
                                          // CORRE√á√ÉO CR√çTICA: Em vez de armazenar o objeto Date, 
                                          // armazenamos a string YYYY-MM-DD diretamente
                                          const isoDateString = `${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`;
                                          console.log(`‚úÖ Data v√°lida convertida: ${isoDateString} (em vez do objeto Date)`);
                                          
                                          // Atualiza apenas a data espec√≠fica dessa parcela com a string formatada
                                          const newDates = [...installmentDates];
                                          newDates[index] = isoDateString; // String no formato YYYY-MM-DD em vez do objeto Date
                                          setInstallmentDates(newDates);
                                        } else {
                                          console.log(`‚ùå Data inv√°lida: ${day}/${month+1}/${year}`);
--
                                      }
                                    } else if (e.target.value.includes('-')) {
                                      // Tenta processar formato YYYY-MM-DD
                                      const parts = e.target.value.split('-');
                                      
                                      // CORRE√á√ÉO DE SEGURAN√áA: Verificar partes completas
                                      if (parts.length !== 3 || !parts[0] || !parts[1] || !parts[2]) {
                                        console.log(`‚ö†Ô∏è Formato ISO incompleto: ${parts.join('-')}`);
                                        return;
                                      }
                                      
                                      const year = parseInt(parts[0]);
                                      const month = parseInt(parts[1]) - 1;
                                      const day = parseInt(parts[2]);
                                      
                                      // CORRE√á√ÉO DE SEGURAN√áA: Valida√ß√µes b√°sicas
                                      if (isNaN(day) || day < 1 || day > 31) {
                                        console.log(`‚ö†Ô∏è Dia inv√°lido (ISO): ${parts[2]}`);
                                        return;
                                      }
                                      
                                      if (isNaN(month) || month < -1 || month > 11) {
                                        console.log(`‚ö†Ô∏è M√™s inv√°lido (ISO): ${parts[1]}`);
                                        return;
                                      }
                                      
                                      if (isNaN(year) || year < 2000 || year > 2100) {
                                        console.log(`‚ö†Ô∏è Ano inv√°lido (ISO): ${parts[0]}`);
                                        return;
                                      }
                                      
                                      if (!isNaN(day) && !isNaN(month) && !isNaN(year)) {
                                        const newDate = new Date(year, month, day);
                                        
                                        if (isValid(newDate)) {
                                          // CORRE√á√ÉO CR√çTICA: Em vez de armazenar o objeto Date, 
                                          // armazenamos a string YYYY-MM-DD diretamente
                                          const isoDateString = `${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`;
                                          console.log(`‚úÖ Data v√°lida ISO convertida: ${isoDateString} (em vez do objeto Date)`);
                                          
                                          // Atualiza apenas a data espec√≠fica dessa parcela com a string formatada
                                          const newDates = [...installmentDates];
                                          newDates[index] = isoDateString; // String no formato YYYY-MM-DD
                                          setInstallmentDates(newDates);
                                        }
                                      }
